# Multi-stage build for better optimization  
FROM nvidia/cuda:12.1.1-devel-ubuntu22.04 AS base

# Set environment variables for optimal builds
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    HF_HUB_ENABLE_HF_TRANSFER=1 \
    HF_HUB_CACHE=/runpod-volume/hf_cache \
    DEBIAN_FRONTEND=noninteractive \
    PIP_NO_CACHE_DIR=1 \
    PIP_DISABLE_PIP_VERSION_CHECK=1

# Install system dependencies in single layer
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3 \
    python3-pip \
    python3-dev \
    build-essential \
    git \
    curl \
    wget \
    ca-certificates \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && ln -s /usr/bin/python3 /usr/bin/python

# Set working directory
WORKDIR /

# Upgrade pip with network optimizations
RUN pip install --no-cache-dir --timeout 600 --retries 3 \
    --trusted-host pypi.org --trusted-host pypi.python.org \
    --upgrade pip setuptools wheel

# Install PyTorch with CUDA support first (largest dependency)
RUN pip install --no-cache-dir --timeout 900 --retries 3 \
    torch torchvision torchaudio --index-url https://download.pytorch.org/whl/cu121

# Copy and install requirements with optimizations
COPY requirements-runpod.txt /requirements-runpod.txt
RUN pip install --no-cache-dir --timeout 600 --retries 3 \
    --trusted-host pypi.org --trusted-host pypi.python.org \
    -r requirements-runpod.txt

# Install RunPod SDK
RUN pip install --no-cache-dir --timeout 300 --retries 3 runpod

# Copy the application code
COPY . /

# Install ACE-Step package without dependencies first, then let it install what it needs
RUN pip install --no-cache-dir --no-deps -e . && \
    pip install --no-cache-dir --timeout 900 --retries 3 -e .

# Create necessary directories
RUN mkdir -p /runpod-volume/checkpoints /runpod-volume/hf_cache /tmp

# Pre-download models to avoid runtime delays
RUN python -c "import os; os.environ['HF_HUB_CACHE'] = '/runpod-volume/hf_cache'; print('Pre-downloading ACE-Step models...'); from acestep.pipeline_ace_step import ACEStepPipeline; pipeline = ACEStepPipeline(checkpoint_dir='/runpod-volume/checkpoints', device_id=0); print('Models downloaded successfully!')" || echo "Model pre-download failed but continuing..."

# Set the handler
CMD python -u runpod_handler.py