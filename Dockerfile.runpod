# Based on official ACE-Step Dockerfile but optimized for RunPod serverless
FROM nvidia/cuda:12.6.0-runtime-ubuntu22.04 AS base

# Set environment variables
ENV PYTHONDONTWRITEBYTECODE=1 \
    PYTHONUNBUFFERED=1 \
    HF_HUB_ENABLE_HF_TRANSFER=1 \
    HF_HUB_CACHE=/runpod-volume/hf_cache \
    DEBIAN_FRONTEND=noninteractive

# Install Python and system dependencies (following official Dockerfile)
RUN apt-get update && apt-get install -y --no-install-recommends \
    python3.10 \
    python3-pip \
    python3-venv \
    python3-dev \
    build-essential \
    git \
    curl \
    wget \
    && apt-get clean \
    && rm -rf /var/lib/apt/lists/* \
    && ln -s /usr/bin/python3 /usr/bin/python

# Create and activate virtual environment (following official approach)
RUN python -m venv /opt/venv
ENV PATH="/opt/venv/bin:$PATH"

# Set working directory
WORKDIR /app

# Clone the repository directly (like official Dockerfile - avoids COPY issues)
RUN git clone https://github.com/caraulani/ace-step.git .

# Install dependencies with matching CUDA versions (PyTorch first, then others)
RUN pip3 install --no-cache-dir --timeout 600 --retries 3 --upgrade pip && \
    pip3 install --no-cache-dir --timeout 300 --retries 3 hf_transfer peft

# Install PyTorch with CUDA 12.1 support to match container runtime
# Using exact versions to prevent any automatic upgrades
RUN pip3 install --no-cache-dir --timeout 900 --retries 3 \
    torch==2.4.0 torchvision==0.19.0 torchaudio==2.4.0 --index-url https://download.pytorch.org/whl/cu121

# Copy and install requirements WITHOUT torch packages to avoid conflicts
COPY requirements-runpod-no-torch.txt /app/requirements-runpod-no-torch.txt  
RUN pip3 install --no-cache-dir --timeout 600 --retries 3 -r requirements-runpod-no-torch.txt

# Install ACE-Step package without dependencies to avoid PyTorch reinstallation
RUN pip3 install --no-cache-dir --no-deps --timeout 600 --retries 3 .

# Install RunPod SDK
RUN pip3 install --no-cache-dir --timeout 300 --retries 3 runpod

# Verify PyTorch and CUDA versions
RUN python3 -c "import torch; import torchaudio; print(f'PyTorch: {torch.__version__}'); print(f'CUDA: {torch.version.cuda}'); print(f'TorchAudio: {torchaudio.__version__}')"

# Create necessary directories for RunPod
RUN mkdir -p /runpod-volume/checkpoints /runpod-volume/hf_cache /tmp

# Copy our custom RunPod handler
COPY runpod_handler.py /app/runpod_handler.py

# Models will be downloaded automatically on first use
# Set the handler
CMD python -u runpod_handler.py